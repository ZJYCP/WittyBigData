import{_ as a,V as i,W as e,$ as n,X as r,a1 as l}from"./framework-8aef05fa.js";const t={},o=r("p",null,"YARN 是 Hadoop2 引入的通用的资源管理和任务调度的平台，可以在 YARN 上运行 MapReduce、Tez、Spark 等多种计算框架",-1),c=l('<h2 id="yarn的架构" tabindex="-1"><a class="header-anchor" href="#yarn的架构" aria-hidden="true">#</a> Yarn的架构</h2><h3 id="yarn集群架构和工作原理" tabindex="-1"><a class="header-anchor" href="#yarn集群架构和工作原理" aria-hidden="true">#</a> yarn集群架构和工作原理</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230308210737488.png" alt="image-20230308210737488" tabindex="0" loading="lazy"><figcaption>image-20230308210737488</figcaption></figure><p>yarn由两个服务组成，ResourceManager和ApplicationMaster</p><ul><li>ResourceManager</li></ul><p>RM是一个全局的资源管理器，负责<strong>整个系统的资源管理和分配</strong>，由调度器（Scheduler）和应用程序管理器（Application Manager）组成。</p><p>调度器：将系统中的资源分配给正在运行的应用程序</p><p>应用程序管理器：负责应用程序的提交，与调度器协商资源启动Application Master</p><ul><li><p>Application Master</p><ol><li>与RM调度器协商以获得资源</li><li>将得到的任务分配给内部的任务</li><li>与NN通信以启动、停止任务</li><li>监控所有内部任务的状态，负责重新申请资源重启任务</li></ol></li><li><p>nodeManager</p></li></ul><p>每个节点上的资源和任务管理器，将RM汇报本节点的资源使用情况和各个Container运行状态。</p><p>接受处理来着AM的停止启动container请求</p><ul><li>container</li></ul><p>Yarn中的资源抽象，封装了各种资源，一个应用程序分配一个container。</p><h3 id="yarn的任务提交流程" tabindex="-1"><a class="header-anchor" href="#yarn的任务提交流程" aria-hidden="true">#</a> yarn的任务提交流程</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230309000500649.png" alt="image-20230309000500649" tabindex="0" loading="lazy"><figcaption>image-20230309000500649</figcaption></figure><p>当jobclient向yarn提交一个应用程序后，将分两阶段运行这个应用程序。一是启动Application Master，二是由AM创建应用程序，申请资源，监控运行。</p><p>具体如下:</p><ol><li>客户端向yarn提交应用程序，并指定AM程序，启动AM命令，用户程序。</li><li>RM为这个应用程序分配第一个Container，并与之对应的NM通讯，要求在这个Container中启动应用程序AM</li><li>AM向RM注册，然后拆分为内部各个子任务，为各个子任务申请资源，监控任务运行</li><li>AM采用轮询的方式向RM申请和领取资源</li><li>RM为AM分配资源，以Container形式返回</li><li>AM申请到资源后，便与之对应的NM通信，要求NM启动任务</li><li>NM为任务设置好运行环境，将任务启动命令写到一个脚本，并通过这个脚本启动任务</li><li>各个任务向AM汇报自己的状态和进度，以便任务失败时可以重启</li><li>应用程序完成后，AM向RM注销并关闭自己</li></ol><h2 id="rm和nm的功能介绍" tabindex="-1"><a class="header-anchor" href="#rm和nm的功能介绍" aria-hidden="true">#</a> RM和NM的功能介绍</h2><h2 id="application-master介绍" tabindex="-1"><a class="header-anchor" href="#application-master介绍" aria-hidden="true">#</a> Application Master介绍</h2><h2 id="yarn的资源调度" tabindex="-1"><a class="header-anchor" href="#yarn的资源调度" aria-hidden="true">#</a> yarn的资源调度</h2>',21);function p(d,h){return i(),e("div",null,[o,n(" more "),c])}const M=a(t,[["render",p],["__file","Hadoop-Yarn.html.vue"]]);export{M as default};
