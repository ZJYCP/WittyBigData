import{_ as o,V as t,W as i,X as r,Z as a,a0 as n,Y as p,a1 as e,C as l}from"./framework-25aba5a5.js";const c={},u=a("p",null,"本章主要介绍Kafka Broker",-1),d=e(`<h2 id="broker-工作流程" tabindex="-1"><a class="header-anchor" href="#broker-工作流程" aria-hidden="true">#</a> Broker 工作流程</h2><h3 id="zookeeper存储的kafka信息" tabindex="-1"><a class="header-anchor" href="#zookeeper存储的kafka信息" aria-hidden="true">#</a> Zookeeper存储的Kafka信息</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230505203837678.png" alt="Zookeeper存储的Kafka信息" tabindex="0" loading="lazy"><figcaption>Zookeeper存储的Kafka信息</figcaption></figure><h3 id="kafka-broker总体工作流程" tabindex="-1"><a class="header-anchor" href="#kafka-broker总体工作流程" aria-hidden="true">#</a> Kafka Broker总体工作流程</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230505212055738.png" alt="image-20230505212055738" tabindex="0" loading="lazy"><figcaption>image-20230505212055738</figcaption></figure><h2 id="节点服役和节点退役" tabindex="-1"><a class="header-anchor" href="#节点服役和节点退役" aria-hidden="true">#</a> 节点服役和节点退役</h2><h3 id="服役新节点" tabindex="-1"><a class="header-anchor" href="#服役新节点" aria-hidden="true">#</a> 服役新节点</h3><ol><li><p>新节点准备</p></li><li><p>执行负载均衡操作</p><p>a. 创建一个要均衡的主题</p></li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
<span class="token property">&quot;topics&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span><span class="token property">&quot;topic&quot;</span><span class="token operator">:</span> <span class="token string">&quot;first&quot;</span><span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ b. 生成一个负载均衡计划</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/kafka-reassign-partitions.sh -- bootstrap-server hadoop102:9092 --topics-to-move-json-file topics-to-move.json --broker-list <span class="token string">&quot;0,1,2,3&quot;</span> <span class="token parameter variable">--generate</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ c. 创建副本存储计划 increase-replication-factor.json</p><p>​ d. 执行副本存储计划</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/kafka-reassign-partitions.sh -- bootstrap-server hadoop102:9092 --reassignment-json-file increase-replication-factor.json <span class="token parameter variable">--execute</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="退役旧节点" tabindex="-1"><a class="header-anchor" href="#退役旧节点" aria-hidden="true">#</a> 退役旧节点</h3><ol><li>创建要均衡的主题</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
<span class="token property">&quot;topics&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span><span class="token property">&quot;topic&quot;</span><span class="token operator">:</span> <span class="token string">&quot;first&quot;</span><span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建执行计划</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/kafka-reassign-partitions.sh -- bootstrap-server hadoop102:9092 --topics-to-move-json-file topics-to-move.json --broker-list <span class="token string">&quot;0,1,2&quot;</span> <span class="token parameter variable">--generate</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>根据执行计划创建副本存储计划</li><li>执行副本存储计划</li></ol><h2 id="kafka副本" tabindex="-1"><a class="header-anchor" href="#kafka副本" aria-hidden="true">#</a> Kafka副本</h2><h3 id="副本基本信息" tabindex="-1"><a class="header-anchor" href="#副本基本信息" aria-hidden="true">#</a> 副本基本信息</h3><ol><li><p>副本作用：提高数据可靠性</p></li><li><p>默认1个副本，生产环境一般配置2个</p></li><li><p>副本分为：Leader和Follower。 生产者只会把数据发给Leader，Follower找Leader同步数据</p></li><li><p>所有副本统称为AR（Assigned Replicas）</p><p>AR = ISR + OSR</p><p><strong>ISR</strong>：表示和Leader保持同步的Follower集合。长时间未通信的Follower会被踢出ISR。Leader发生故障后，就会ISR中选举新的Leader</p><p><strong>OSR</strong>： 表示Follower与Leader副本同步时，延迟过多的副本</p></li></ol><h3 id="leader选举流程" tabindex="-1"><a class="header-anchor" href="#leader选举流程" aria-hidden="true">#</a> Leader选举流程</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507200723532.png" alt="Leader选举" tabindex="0" loading="lazy"><figcaption>Leader选举</figcaption></figure><h3 id="leader-和-follower-故障处理细节" tabindex="-1"><a class="header-anchor" href="#leader-和-follower-故障处理细节" aria-hidden="true">#</a> <strong>Leader</strong> 和 <strong>Follower</strong> 故障处理细节</h3><h4 id="follower故障处理" tabindex="-1"><a class="header-anchor" href="#follower故障处理" aria-hidden="true">#</a> Follower故障处理</h4><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507202019447.png" alt="Follower故障处理" tabindex="0" loading="lazy"><figcaption>Follower故障处理</figcaption></figure><h4 id="leader故障处理" tabindex="-1"><a class="header-anchor" href="#leader故障处理" aria-hidden="true">#</a> Leader故障处理</h4><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507202047840.png" alt="Leader故障处理" tabindex="0" loading="lazy"><figcaption>Leader故障处理</figcaption></figure><h3 id="分区副本分配" tabindex="-1"><a class="header-anchor" href="#分区副本分配" aria-hidden="true">#</a> 分区副本分配</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507203324101.png" alt="分区副本" tabindex="0" loading="lazy"><figcaption>分区副本</figcaption></figure><h3 id="手动调整分区副本存储" tabindex="-1"><a class="header-anchor" href="#手动调整分区副本存储" aria-hidden="true">#</a> 手动调整分区副本存储</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507203608240.png" alt="副本调整" tabindex="0" loading="lazy"><figcaption>副本调整</figcaption></figure><ol><li>创建副本存储计划</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
   <span class="token property">&quot;version&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
<span class="token property">&quot;partitions&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;topic&quot;</span><span class="token operator">:</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;partition&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">&quot;replicas&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token property">&quot;topic&quot;</span><span class="token operator">:</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;partition&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;replicas&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token property">&quot;topic&quot;</span><span class="token operator">:</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;partition&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token property">&quot;replicas&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token property">&quot;topic&quot;</span><span class="token operator">:</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;partition&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token property">&quot;replicas&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>执行副本计划</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/kafka-reassign-partitions.sh -- bootstrap-server hadoop102:9092 --reassignment-json-file increase-replication-factor.json <span class="token parameter variable">--execute</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="leader-partition-负载平衡" tabindex="-1"><a class="header-anchor" href="#leader-partition-负载平衡" aria-hidden="true">#</a> <strong>Leader Partition</strong> 负载平衡</h3><ul><li>auto.leader.rebalance.enable，默认是true</li><li>leader.imbalance.per.broker.percentage， 默认是10%</li><li>leader.imbalance.check.interval.seconds， 默认值300秒。检查leader负载是否平衡的间隔时间</li></ul><p>比例计算：</p><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507211816181.png" alt="image-20230507211816181" tabindex="0" loading="lazy"><figcaption>image-20230507211816181</figcaption></figure><p>对broker3，partition1Leader应该是它，但不是，不平衡数+1，AR副本数4，不平衡率=1/4</p><p>建议设置为关闭</p><h3 id="增加副本因子" tabindex="-1"><a class="header-anchor" href="#增加副本因子" aria-hidden="true">#</a> 增加副本因子</h3><ol><li>创建副本存储计划</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&quot;version&quot;:1,&quot;partitions&quot;:[{&quot;topic&quot;:&quot;four&quot;,&quot;partition&quot;:0,&quot;replicas&quot;:[0,1,2]},{&quot;topic&quot;:&quot;four&quot;,&quot;partition&quot;:1,&quot;replicas&quot;:[0,1,2]},{&quot;topic&quot;:&quot;four&quot;,&quot;partition&quot;:2,&quot;replicas&quot;:[0,1,2]}]}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>执行副本存储计划</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/kafka-reassign-partitions.sh -- bootstrap-server hadoop102:9092 --reassignment-json-file increase-replication-factor.json <span class="token parameter variable">--execute</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="文件存储" tabindex="-1"><a class="header-anchor" href="#文件存储" aria-hidden="true">#</a> 文件存储</h2><h3 id="文件存储机制" tabindex="-1"><a class="header-anchor" href="#文件存储机制" aria-hidden="true">#</a> 文件存储机制</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507224655964.png" alt="Kafka存储机制" tabindex="0" loading="lazy"><figcaption>Kafka存储机制</figcaption></figure><ul><li>每个partition对应一个log文件</li><li>producer生产的数据会被追加到log文件末端</li><li>Kafka<strong>采用了分片和索引机制</strong></li><li>每个partition分为多个segment，包含index文件，log文件，timeindex文件</li></ul><h3 id="index文件和log文件详解" tabindex="-1"><a class="header-anchor" href="#index文件和log文件详解" aria-hidden="true">#</a> index文件和log文件详解</h3><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230507224934875.png" alt="index文件和log文件" tabindex="0" loading="lazy"><figcaption>index文件和log文件</figcaption></figure><p>index：65,6410 表示数据文件中的第65个message，它的偏移地址是6410</p><ul><li>稀疏索引</li></ul><h3 id="文件清理策略" tabindex="-1"><a class="header-anchor" href="#文件清理策略" aria-hidden="true">#</a> 文件清理策略</h3>`,58),h=a("li",null,"log.retention.hours（minutes，ms）",-1),g={href:"http://log.retention.check.interval.ms",target:"_blank",rel:"noopener noreferrer"},k=e('<h4 id="delete-日志删除-将过期数据删除" tabindex="-1"><a class="header-anchor" href="#delete-日志删除-将过期数据删除" aria-hidden="true">#</a> delete 日志删除，将过期数据删除</h4><p>log.cleanup.policy = delete</p><ol><li>基于时间：默认。以segment中所有记录中的最大时间戳作为该文件的时间戳</li><li>基于大小：默认关闭，超过设置的日志总大小，删除最早的segment</li></ol><h4 id="compact日志压缩" tabindex="-1"><a class="header-anchor" href="#compact日志压缩" aria-hidden="true">#</a> compact日志压缩</h4><p>对于key相同的不同value，只保留最后一个版本</p><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230508000105727.png" alt="compact" tabindex="0" loading="lazy"><figcaption>compact</figcaption></figure><h2 id="高效读写数据" tabindex="-1"><a class="header-anchor" href="#高效读写数据" aria-hidden="true">#</a> 高效读写数据</h2><ul><li>Kafka是分布式集群，并行度高</li><li>读数据采用稀疏索引，可以快速定位</li><li>顺序写磁盘</li><li>页缓存+零拷贝技术</li></ul><p><strong>零拷贝</strong>: Kafka的数据加工处理操作交由Kafka生产者和Kafka消费者处理。Kafka Broker应用层不关心存储的数据，所以就不用走应用层，传输效率高</p><p><strong>PageCache</strong>: 页缓存:Kafka重度依赖底层操作系统提供的PageCache功能。当上层有写操作时，操作系统只是将数据写入 PageCache。当读操作发生时，先从PageCache中查找，如果找不到，再去磁盘中读取。实际上PageCache是把尽可能多的空闲内存 都当做了磁盘缓存来使用</p><figure><img src="https://blog-1252832257.cos.ap-shanghai.myqcloud.com/image-20230508000215950.png" alt="image-20230508000215950" tabindex="0" loading="lazy"><figcaption>image-20230508000215950</figcaption></figure>',11);function m(b,f){const s=l("ExternalLinkIcon");return t(),i("div",null,[u,r(" more "),d,a("ul",null,[a("li",null,[n("默认保存7天，修改参数有 "),a("ul",null,[h,a("li",null,[a("a",g,[n("log.retention.check.interval.ms"),p(s)])])])])]),k])}const q=o(c,[["render",m],["__file","Kafka Broker.html.vue"]]);export{q as default};
